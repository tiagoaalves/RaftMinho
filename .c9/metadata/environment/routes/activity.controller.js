{"changed":true,"filter":false,"title":"activity.controller.js","tooltip":"/routes/activity.controller.js","value":"const express = require('express');\nconst router = express.Router();\n\nconst getAtividades = 'SELECT * FROM atividade';\nconst createAtividade = 'INSERT INTO pn1yme2p_rafting.atividade SET ?';\nconst updateAtividade = 'INSERT INTO pn1yme2p_rafting.atividade SET ? WHERE id_atividade=?';\nconst deleteAtividade = 'DELETE FROM pn1yme2p_rafting.atividade WHERE nome_atividade = ?;';\nconst getAtividade = 'SELECT * FROM atividade WHERE id_atividade=?';\nconst getEspacos = 'SELECT * FROM espaco';\n\n//vai buscar todas as atividades à bd e envia para o client\nrouter.get('/tudo', function(req, res){\n    global.connection.query(getAtividades, function(error, results, fields) {\n    if (error) {\n      res.status(500).json({ error: error, response: null }); \n    } else if (results.length == 0) {\n      res.status(204).json({ error: null, response: results });\n    } else {\n      res.status(200).json({ error: null, response: results });\n    }\n  });\n});\n\n//recebe request do client e cria uma nova atividade\nrouter.post('/postAtividade', function(req, res) {\n      console.log(req.body);\n      const nome = req.body.nome;\n      const custo = req.body.custo;\n      const participantesMax = req.body.participantesMax;\n      const dificuldade = req.body.dificuldade;\n      const dataInicio = req.body.dataInicio;\n      const dataFim = req.body.dataFim;\n      const espaco = req.body.espaco;\n      const reservado = 0;\n      var query = \"\";\n      var post = {\n      nome_atividade: nome,\n      custo: custo,\n      nr_participantes_max: participantesMax,\n      dificuldade_atividade : dificuldade,\n      data_inicio : dataInicio,\n      data_fim : dataFim,\n      reservado: reservado,\n      };\n      query = global.connection.query(createAtividade, post, function (err, rows, fields) {\n      console.log(query.sql);\n      if (!err) {\n      res.status(200).location(rows.insertId).send({\n      \"msg\": \"inserted with success\"\n      });\n      console.log(\"Number of records inserted: \" + rows.affectedRows);\n      } else {\n      if (err.code == \"ER_DUP_ENTRY\") {\n        res.status(409).send({\"msg\": err.code});\n        console.log('Error while performing Query.', err);\n        global.connection.query('error', function(err) {\n              console.log(\"[mysql error]\",err);\n            });\n      } else {\n      res.status(400).send({\"msg\": err.code});\n      global.connection.query('error', function(err) {\n              console.log(\"[mysql error]\",err);\n            });\n      }\n      }\n    });\n\n});\n\nrouter.put('/:atividade', function(req, res) {\n      console.log(req.body);\n      const nome = req.body.nome;\n      const custo = req.body.custo;\n      const participantesMax = req.body.participantesMax;\n      const dificuldade = req.body.dificuldade;\n      const dataInicio = req.body.dataInicio;\n      const dataFim = req.body.dataFim;\n      const espaco = req.body.espaco;\n      const reservado = 0;\n      var query = \"\";\n      var post = {\n      nome_atividade: nome,\n      custo: custo,\n      nr_participantes_max: participantesMax,\n      dificuldade_atividade : dificuldade,\n      data_inicio : dataInicio,\n      data_fim : dataFim,\n      reservado: reservado,\n      };\n      query = global.connection.query(createAtividade, post, function (err, rows, fields) {\n      console.log(query.sql);\n      if (!err) {\n      res.status(200).location(rows.insertId).send({\n      \"msg\": \"inserted with success\"\n      });\n      console.log(\"Number of records inserted: \" + rows.affectedRows);\n      } else {\n      if (err.code == \"ER_DUP_ENTRY\") {\n        res.status(409).send({\"msg\": err.code});\n        console.log('Error while performing Query.', err);\n        global.connection.query('error', function(err) {\n              console.log(\"[mysql error]\",err);\n            });\n      } else {\n      res.status(400).send({\"msg\": err.code});\n      global.connection.query('error', function(err) {\n              console.log(\"[mysql error]\",err);\n            });\n      }\n      }\n    });\n\n});\n\nrouter.get('/espacos', function(req, res){\n    global.connection.query(getEspacos, function(error, results, fields) {\n    if (error) {\n      res.status(500).json({ error: error, response: null }); \n    } else if (results.length == 0) {\n      res.status(204).json({ error: null, response: results });\n    } else {\n      res.status(200).json({ error: null, response: results });\n    }\n  });\n});\n\nrouter.delete('/:atividade', function(req, res) {\n  var query = global.connection.query(deleteAtividade, [ req.params.atividade ], function(error, results, fields) {\n    console.log(query.sql);\n    if (error) {\n      res.status(500).json({ error: error, response: null }); \n    } else if (results.affectedRows == 0) {\n      res.status(404).json({ error: 'Atividade não encontrada!', response: null });    \n    } else{\n      res.status(204).json({ error: null, response: null }); \n    }\n  });\n});\n\nrouter.get('/:atividade', function(req, res) {\n  var query = global.connection.query(getAtividade, [ req.params.atividade ], function(error, results, fields) {\n    console.log(query.sql);\n    if (error) {\n      res.status(500).json({ error: error, response: null }); \n    } else if (results.length == 0) {\n      res.status(404).json({ error: \"NOT FOUND\", response: null });      \n    } else {\n      res.status(200).json({ error: null, response: results[0] });\n    }\n  });\n});\n\nmodule.exports = router;\n\n","undoManager":{"mark":-2,"position":-1,"stack":[]},"ace":{"folds":[],"scrolltop":889,"scrollleft":0,"selection":{"start":{"row":23,"column":52},"end":{"row":23,"column":52},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":59,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1574788063044}